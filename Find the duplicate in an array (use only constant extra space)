Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

Example 1:
Input: nums = [1,3,4,2,2]
Output: 2

Example 2:
Input: nums = [3,1,3,4,2]
Output: 3


class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int n=nums.size();
        int low=0,high=n-1;
        while(low<=high){
            int ans=0;
            int mid=low+(high-low)/2;
            for(int i=0;i<n;i++){
                if(nums[i]<=mid){
                    ans++;
                }
            }
            if(ans<=mid){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return low;
    }
};
